name: GitVersion - PR

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  
  GITVERSION_VERSION: 6.3.0

on:
  pull_request:
    types: [opened, synchronize, reopened]    
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      GitVersion_BranchName: ${{ steps.gitversion_step.outputs.GitVersion_BranchName }}
      GitVersion_SemVer: ${{ steps.gitversion_step.outputs.GitVersion_SemVer }}
      GitVersion_FullSemVer: ${{ steps.gitversion_step.outputs.GitVersion_FullSemVer }}
      GitVersion_MajorMinorPatch: ${{ steps.gitversion_step.outputs.GitVersion_MajorMinorPatch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.0.1
        with:
          versionSpec: ${{ env.GITVERSION_VERSION }}

      - id: gitversion_step
        name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v4.0.1
      
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write
    needs: [ setup ]
    env:
      GitVersion_BranchName: ${{ needs.setup.outputs.GitVersion_BranchName }}
      GitVersion_SemVer: ${{ needs.setup.outputs.GitVersion_SemVer }}
      GitVersion_FullSemVer: ${{ needs.setup.outputs.GitVersion_FullSemVer }}
      GitVersion_MajorMinorPatch: ${{ needs.setup.outputs.GitVersion_MajorMinorPatch }}
    steps: 
      - name: Display GitVersion variables
        shell: bash
        run: |
          echo "GitVersion BranchName         : $GitVersion_BranchName"
          echo "GitVersion SemVer             : $GitVersion_SemVer"
          echo "GitVersion FullSemVer         : $GitVersion_FullSemVer"
          echo "GitVersion MajorMinorPatch    : $GitVersion_MajorMinorPatch"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: src/DockerSampleApp
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}