name: GitVersion - PR

env:
  BUILD_CONFIGURATION: Release
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  
  GITVERSION_VERSION: 6.3.0

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]    
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      BRANCH_NAME: ${{ steps.variables.outputs.branch_name }}
      SEMVER: ${{ steps.variables.outputs.semver }}
      FULL_SEMVER: ${{ steps.variables.outputs.full_semver }}
      MAJOR_MINOR_PATCH: ${{ steps.variables.outputs.major_minor_patch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.0.1
        with:
          versionSpec: ${{ env.GITVERSION_VERSION }}

      - name: Execute GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.0.1

      - name: Set output
        id: variables
        run: | 
          echo "branch_name=$(${{ steps.gitversion.outputs.GitVersion_BranchName }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "semver=$(${{ steps.gitversion.outputs.GitVersion_SemVer }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "full_semver=$(${{ steps.gitversion.outputs.GitVersion_FullSemVer }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
          echo "major_minor_patch=$(${{ steps.gitversion.outputs.GitVersion_MajorMinorPatch }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      
  #docker:
  #  runs-on: ubuntu-latest
  #  permissions:
  #    id-token: write
  #    contents: read
  #    packages: write
  #    attestations: write
  #  needs: [ setup ]
  #  env:
  #    GitVersion_BranchName: ${{ needs.setup.outputs.GitVersion_BranchName }}
  #    GitVersion_SemVer: ${{ needs.setup.outputs.GitVersion_SemVer }}
  #    GitVersion_FullSemVer: ${{ needs.setup.outputs.GitVersion_FullSemVer }}
  #    GitVersion_MajorMinorPatch: ${{ needs.setup.outputs.GitVersion_MajorMinorPatch }}
  #  steps: 
  #    - name: Display GitVersion variables
  #      shell: bash
  #      run: |
  #        echo "GitVersion BranchName         : $GitVersion_BranchName"
  #        echo "GitVersion SemVer             : $GitVersion_SemVer"
  #        echo "GitVersion FullSemVer         : $GitVersion_FullSemVer"
  #        echo "GitVersion MajorMinorPatch    : $GitVersion_MajorMinorPatch"

  #    - name: Checkout repository
  #      uses: actions/checkout@v4

  #    - name: Log in to the Container registry
  #      uses: docker/login-action@v3
  #      with:
  #        registry: ${{ env.REGISTRY }}
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}

  #    - name: Extract metadata (tags, labels) for Docker
  #      id: meta
  #      uses: docker/metadata-action@v5
  #      with:
  #        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #    # How to set variables on git actions bash
  #    # - name: Set environment variables
  #    #   id: set-variables
  #    #   run: |
  #    #     echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
  #    #     echo "VERSION=$(yq -r .version ./charts/sample-app/Chart.yaml)" >> "$GITHUB_OUTPUT"          

  #    - id: lower-repo
  #      name: Repository to lowercase
  #      shell: pwsh
  #      run: |
  #        "::set-output name=repository::$($env:IMAGE_NAME.ToLowerInvariant()):$($env:GitVersion_SemVer.ToLowerInvariant())"

  #    - name: Build and push Docker image
  #      id: push
  #      uses: docker/build-push-action@v6
  #      with:
  #        context: .
  #        push: true
  #        file: src/DockerSampleApp/Dockerfile
  #        build-args: |
  #          BUILD_CONFIGURATION=${{ env.BUILD_CONFIGURATION }}
  #          GITVERSION=${{ env.GitVersion_SemVer }}
  #          MAJOR_MINOR_PATCH=${{ env.GitVersion_MajorMinorPatch }}
  #        tags: |
  #          ghcr.io/${{ steps.lower-repo.outputs.repository }}
  #        labels: ${{ steps.meta.outputs.labels }}
  #
  #helm:
  #  runs-on: ubuntu-latest
  #  permissions:
  #    id-token: write
  #    contents: read
  #    packages: write
  #    attestations: write
  #  needs: [ setup, docker ]
  #  env:
  #    GitVersion_BranchName: ${{ needs.setup.outputs.GitVersion_BranchName }}
  #    GitVersion_SemVer: ${{ needs.setup.outputs.GitVersion_SemVer }}
  #    GitVersion_FullSemVer: ${{ needs.setup.outputs.GitVersion_FullSemVer }}
  #    GitVersion_MajorMinorPatch: ${{ needs.setup.outputs.GitVersion_MajorMinorPatch }}
  #  steps: 
  #    - name: Display GitVersion variables
  #      shell: bash
  #      run: |
  #        echo "GitVersion BranchName         : $GitVersion_BranchName"
  #        echo "GitVersion SemVer             : $GitVersion_SemVer"
  #        echo "GitVersion FullSemVer         : $GitVersion_FullSemVer"
  #        echo "GitVersion MajorMinorPatch    : $GitVersion_MajorMinorPatch"

  #    - name: Checkout repository
  #      uses: actions/checkout@v4

  #    - name: Log in to the Container registry
  #      uses: docker/login-action@v3
  #      with:
  #        registry: ${{ env.REGISTRY }}
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}

  #    - id: lower-semver
  #      name: lowercase semver
  #      shell: pwsh
  #      run: |
  #        "::set-output name=semver::$($env:GitVersion_SemVer.ToLowerInvariant())"

  #    - name: Package and push helm chart
  #      run: |
  #        echo ${{ env.REGISTRY }}  
  #        echo ${{ github.actor }}
  #        echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io --username ${{ github.actor }} --password-stdin
  #        helm package ./.helm/dockerwalkthrough --version ${{ steps.lower-semver.outputs.semver }} --destination ./.helm/dockerwalkthrough
  #        helm push ./.helm/dockerwalkthrough/dockerwalkthrough-${{ steps.lower-semver.outputs.semver }}.tgz oci://${{ env.REGISTRY }}/${{ github.actor }}/charts
  
