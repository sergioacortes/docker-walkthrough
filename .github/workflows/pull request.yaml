name: GitVersion - PR

env:
  BUILD_CONFIGURATION: Release
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}  
  GITVERSION_VERSION: 6.3.0

on:
  pull_request:
    types: [opened, synchronize, reopened]    
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      GitVersion_BranchName: ${{ steps.gitversion_step.outputs.GitVersion_BranchName }}
      GitVersion_SemVer: ${{ steps.gitversion_step.outputs.GitVersion_SemVer }}
      GitVersion_FullSemVer: ${{ steps.gitversion_step.outputs.GitVersion_FullSemVer }}
      GitVersion_MajorMinorPatch: ${{ steps.gitversion_step.outputs.GitVersion_MajorMinorPatch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.0.1
        with:
          versionSpec: ${{ env.GITVERSION_VERSION }}

      - id: gitversion_step
        name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v4.0.1
      
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
      attestations: write
    needs: [ setup ]
    env:
      GitVersion_BranchName: ${{ needs.setup.outputs.GitVersion_BranchName }}
      GitVersion_SemVer: ${{ needs.setup.outputs.GitVersion_SemVer }}
      GitVersion_FullSemVer: ${{ needs.setup.outputs.GitVersion_FullSemVer }}
      GitVersion_MajorMinorPatch: ${{ needs.setup.outputs.GitVersion_MajorMinorPatch }}
    steps: 
      - name: Display GitVersion variables
        shell: bash
        run: |
          echo "GitVersion BranchName         : $GitVersion_BranchName"
          echo "GitVersion SemVer             : $GitVersion_SemVer"
          echo "GitVersion FullSemVer         : $GitVersion_FullSemVer"
          echo "GitVersion MajorMinorPatch    : $GitVersion_MajorMinorPatch"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@v5
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # How to set variables on git actions bash
      # - name: Set environment variables
      #   id: set-variables
      #   run: |
      #     echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
      #     echo "VERSION=$(yq -r .version ./charts/sample-app/Chart.yaml)" >> "$GITHUB_OUTPUT"          

      - id: lower-semver
        name: lowercase semver
        shell: pwsh
        run: |
          "::set-output name=semver::$($env:GitVersion_SemVer.ToLowerInvariant())"

      #- id: lower-repo
      #  name: Repository to lowercase
      #  shell: pwsh
      #  run: |
      #    "::set-output name=repository::$($env:IMAGE_NAME.ToLowerInvariant()):$($env:semver)"

      #- name: Build and push Docker image
      #  id: push
      #  uses: docker/build-push-action@v6
      #  with:
      #    context: .
      #    push: true
      #    file: src/DockerSampleApp/Dockerfile
      #    build-args: |
      #      BUILD_CONFIGURATION=${{ env.BUILD_CONFIGURATION }}
      #      GITVERSION=${{ env.GitVersion_SemVer }}
      #      MAJOR_MINOR_PATCH=${{ env.GitVersion_MajorMinorPatch }}
      #    tags: |
      #      ghcr.io/${{ steps.lower-repo.outputs.repository }}
      #    labels: ${{ steps.meta.outputs.labels }}

      - name: Package and push helm chart
        run: |
          helm package ./.helm/dockerwalkthrough --version ${{ steps.lower-semver.outputs.semver }} --destination ./.helm/dockerwalkthrough
          helm push ./.helm/dockerwalkthrough/dockerwalkthrough-${{ steps.lower-semver.outputs.semver }}.tgz oci://${{ github.repository }}/dockerwalkthrough/charts
  